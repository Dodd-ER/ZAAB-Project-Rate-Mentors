# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#

version: 2
jobs:
  build:
    docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
    # permission to use ./gradlew on git
    - checkout
    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-
    - run:
        name: chmod permissions
        command: chmod +x ./gradlew
    - run: ./gradlew dependencies
    - save_cache:
        paths:
        - ~/.gradle
        key: v1-dependencies-{{ checksum "build.gradle" }}
    - run: ./gradlew clean
    - run: ./gradlew build

  tests:
    docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
    - checkout
    # permission to use ./gradlew on git
    - run:
        name: chmod permissions
        command: chmod +x ./gradlew
    # run tests!
    - run: ./gradlew clean
    - run: ./gradlew --scan test

  deploy:
    docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
    - checkout
    - run: bash .circleci/setup-heroku.sh
    - add_ssh_keys:
        fingerprints:
        - $HEROKU_SSH_FINGERPRINT
    - deploy:
        name: Deploy to Heroku if tests pass and branch is development
        command: |
          if [ "${CIRCLE_BRANCH}" == "development" ]; then
            git push --force git@heroku.com:$HEROKU_APP_NAME.git HEAD:refs/heads/master
          fi
workflows:
  version: 2
  tests_and_build_and_deploy:
    jobs:
    - tests
    - build:
        requires:
        - tests
    - deploy:
        requires:
        - build
        - tests
        filters:
          branches:
            only: development
